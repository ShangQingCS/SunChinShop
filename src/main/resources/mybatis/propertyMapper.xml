<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.sqhl.shop.mapper.propertyMapper">
  <resultMap id="BaseResultMap" type="cn.sqhl.shop.vo.property">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="PROP_CODE" jdbcType="VARCHAR" property="propCode" />
    <result column="PROP_NAME" jdbcType="VARCHAR" property="propName" />
    <result column="PROP_ORDER" jdbcType="CHAR" property="propOrder" />
    <result column="FLAG" jdbcType="CHAR" property="flag" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="CREATE_PEOPLE" jdbcType="VARCHAR" property="createPeople" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, PROP_CODE, PROP_NAME, PROP_ORDER, FLAG, CREATE_TIME, CREATE_PEOPLE
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from SC_PROPERTY
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from SC_PROPERTY
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="cn.sqhl.shop.vo.property">
    insert into SC_PROPERTY (ID, PROP_CODE, PROP_NAME, 
      PROP_ORDER, FLAG, CREATE_TIME, 
      CREATE_PEOPLE)
    values (#{id,jdbcType=VARCHAR}, #{propCode,jdbcType=VARCHAR}, #{propName,jdbcType=VARCHAR}, 
      #{propOrder,jdbcType=CHAR}, #{flag,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createPeople,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.sqhl.shop.vo.property">
    insert into SC_PROPERTY
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="propCode != null">
        PROP_CODE,
      </if>
      <if test="propName != null">
        PROP_NAME,
      </if>
      <if test="propOrder != null">
        PROP_ORDER,
      </if>
      <if test="flag != null">
        FLAG,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="createPeople != null">
        CREATE_PEOPLE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="propCode != null">
        #{propCode,jdbcType=VARCHAR},
      </if>
      <if test="propName != null">
        #{propName,jdbcType=VARCHAR},
      </if>
      <if test="propOrder != null">
        #{propOrder,jdbcType=CHAR},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createPeople != null">
        #{createPeople,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.sqhl.shop.vo.property">
    update SC_PROPERTY
    <set>
      <if test="propCode != null">
        PROP_CODE = #{propCode,jdbcType=VARCHAR},
      </if>
      <if test="propName != null">
        PROP_NAME = #{propName,jdbcType=VARCHAR},
      </if>
      <if test="propOrder != null">
        PROP_ORDER = #{propOrder,jdbcType=CHAR},
      </if>
      <if test="flag != null">
        FLAG = #{flag,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createPeople != null">
        CREATE_PEOPLE = #{createPeople,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.sqhl.shop.vo.property">
    update SC_PROPERTY
    set PROP_CODE = #{propCode,jdbcType=VARCHAR},
      PROP_NAME = #{propName,jdbcType=VARCHAR},
      PROP_ORDER = #{propOrder,jdbcType=CHAR},
      FLAG = #{flag,jdbcType=CHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      CREATE_PEOPLE = #{createPeople,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>